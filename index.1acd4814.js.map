{"mappings":"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","sources":["node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","src/partials/grafic.js","node_modules/chart.js/src/index.ts","src/partials/searchBar.js","src/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import { Chart, registerables } from 'chart.js';\nimport { getWeatherDataForChart } from './weathercard.js';\n\nChart.register(...registerables);\n\nconst ctx = document.querySelector('#myChart').getContext('2d');\nconst chartShowBtn = document.querySelector('.chart-show-link');\nconst chartCloseBtn = document.querySelector('.chart-hide-link');\nconst chartContainer = document.querySelector('.chart-main-container');\nconst chartShowButtonContainer = document.querySelector(\n  '.chart-show-button-container'\n);\n\nfunction chartDisplay() {\n  chartShowButtonContainer.classList.toggle('is-closed');\n  chartContainer.classList.toggle('is-closed');\n  chartContainer.style.display = chartContainer.classList.contains('is-closed')\n    ? 'none'\n    : 'block';\n}\n\nchartShowBtn.addEventListener('click', chartDisplay);\nchartCloseBtn.addEventListener('click', chartDisplay);\n\nconst average = values => {\n  const sum = values.reduce((previous, current) => (current += previous));\n  const avg = sum / values.length;\n  return Number(avg.toFixed(1));\n};\n\nfunction getChartData(weather) {\n  let chartData = {};\n  chartData.days = weather.daysData.map(\n    e => e.date.month + ' ' + e.date.day + ', ' + e.date.year\n  );\n  chartData.humidity = weather.daysData.map(e =>\n    average(e.forecasts.map(i => i.humidity))\n  );\n  chartData.pressure = weather.daysData.map(e =>\n    average(e.forecasts.map(i => i.pressure))\n  );\n  chartData.temperature = weather.daysData.map(e =>\n    average(e.forecasts.map(i => i.temperature))\n  );\n  chartData.speed = weather.daysData.map(e =>\n    average(e.forecasts.map(i => i.windSpeed))\n  );\n\n  // Detectarea dimensiunii ecranului\n  const smallScreen = window.innerWidth < 480;\n\n  let chartMain = {\n    type: 'line',\n    data: {\n      labels: chartData.days,\n      datasets: [\n        {\n          label: ' — Temperature, C°',\n          backgroundColor: 'rgb(255, 107, 8)',\n          borderColor: 'rgb(255, 107, 8)',\n          data: chartData.temperature,\n          fill: false,\n        },\n        {\n          hidden: true,\n          label: ' —  Humidity, %',\n          backgroundColor: 'rgb(10, 6, 234)',\n          borderColor: 'rgb(10, 6, 234)',\n          data: chartData.humidity,\n          fill: false,\n        },\n        {\n          hidden: true,\n          label: '—  Speed, m/s',\n          backgroundColor: 'rgb(235, 155, 5)',\n          borderColor: 'rgb(235, 155, 5)',\n          data: chartData.speed,\n          fill: false,\n        },\n        {\n          hidden: true,\n          label: ' —  Pressure, m/m',\n          backgroundColor: 'rgb(5, 120, 6)',\n          borderColor: 'rgb(5, 120, 6)',\n          data: chartData.pressure,\n          fill: false,\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      maintainAspectRatio: false,\n      plugins: {\n        title: {\n          display: true,\n          text: 'AVERAGE:',\n          color: '#FFFFFF',\n          align: 'start',\n          position: 'top',\n          font: {\n            size: smallScreen\n              ? '10px'\n              : Math.max(10, Math.min(window.innerWidth * 0.02, 50)) + 'px',\n          },\n        },\n        legend: {\n          align: 'center',\n          labels: {\n            boxWidth: smallScreen\n              ? 10\n              : Math.max(10, Math.min(window.innerWidth * 0.01, 30)),\n            boxHeight: smallScreen\n              ? 10\n              : Math.max(10, Math.min(window.innerWidth * 0.01, 30)),\n            padding: smallScreen ? 5 : 10,\n            font: {\n              size: smallScreen\n                ? '8px'\n                : Math.max(8, Math.min(window.innerWidth * 0.015, 25)) + 'px',\n            },\n          },\n        },\n      },\n      scales: {\n        x: {\n          display: true,\n          title: {\n            display: true,\n            text: '',\n            color: '#911',\n            font: {\n              family: 'Comic Sans MS',\n              size: smallScreen\n                ? '8px'\n                : Math.max(8, Math.min(window.innerWidth * 0.015, 25)) + 'px',\n              lineHeight: 1.2,\n            },\n            padding: smallScreen\n              ? { top: 10, left: 0, right: 0, bottom: 0 }\n              : { top: 20, left: 0, right: 0, bottom: 0 },\n          },\n          grid: {\n            color: '#FFFFFF',\n          },\n          ticks: {\n            color: '#FFFFFF',\n            font: {\n              size: smallScreen\n                ? '6px'\n                : Math.max(6, Math.min(window.innerWidth * 0.012, 20)) + 'px',\n            },\n          },\n        },\n        y: {\n          display: true,\n          title: {\n            display: true,\n            text: 'Value of indicators',\n            color: '#FFFFFF',\n            font: {\n              family: 'Lato',\n              size: smallScreen\n                ? '8px'\n                : Math.max(8, Math.min(window.innerWidth * 0.015, 25)) + 'px',\n              lineHeight: 1.2,\n            },\n            padding: smallScreen\n              ? { top: 20, left: 0, right: 0, bottom: 0 }\n              : { top: 30, left: 0, right: 0, bottom: 0 },\n          },\n          grid: {\n            color: '#FFFFFF',\n          },\n          ticks: {\n            color: '#FFFFFF',\n            font: {\n              size: smallScreen\n                ? '6px'\n                : Math.max(6, Math.min(window.innerWidth * 0.012, 20)) + 'px',\n            },\n            min: -5.0,\n            max: -1.0,\n          },\n        },\n      },\n    },\n  };\n  return chartMain;\n}\n\nlet weatherChart;\nfunction renderChart(weather) {\n  if (weatherChart) {\n    weatherChart.data.datasets = getChartData(weather).data.datasets;\n    weatherChart.update(); // Actualizăm graficul\n  } else {\n    let chartData = getChartData(weather);\n    weatherChart = new Chart(ctx, chartData); // Pasăm canvas-ul și obiectul de configurare complet\n  }\n  return weatherChart;\n}\n\nexport async function loadAndRenderChart(city) {\n  const weatherData = await getWeatherDataForChart(city);\n  renderChart(weatherData);\n  chartShowButtonContainer.style.display = 'block'; // Afișăm butonul Show Chart\n  chartContainer.style.display = 'none'; // Ne asigurăm că graficul este ascuns inițial\n}\n\n// Example of test data (you can remove this when using real data)\nconst testWeatherData = {\n  daysData: [\n    {\n      date: { month: 'Feb', day: '9', year: '2020' },\n      forecasts: [\n        { humidity: 45, pressure: 1012, temperature: -5, windSpeed: 1.5 },\n        { humidity: 47, pressure: 1013, temperature: -4.5, windSpeed: 1.8 },\n      ],\n    },\n    {\n      date: { month: 'Feb', day: '10', year: '2020' },\n      forecasts: [\n        { humidity: 50, pressure: 1014, temperature: -4, windSpeed: 2 },\n        { humidity: 52, pressure: 1016, temperature: -3.5, windSpeed: 2.2 },\n      ],\n    },\n    {\n      date: { month: 'Feb', day: '11', year: '2020' },\n      forecasts: [\n        { humidity: 55, pressure: 1018, temperature: -3, windSpeed: 3 },\n        { humidity: 57, pressure: 1020, temperature: -2.5, windSpeed: 3.5 },\n      ],\n    },\n    {\n      date: { month: 'Feb', day: '12', year: '2020' },\n      forecasts: [\n        { humidity: 60, pressure: 1022, temperature: -2, windSpeed: 4 },\n        { humidity: 62, pressure: 1024, temperature: -1.5, windSpeed: 4.5 },\n      ],\n    },\n    {\n      date: { month: 'Feb', day: '13', year: '2020' },\n      forecasts: [\n        { humidity: 65, pressure: 1025, temperature: -1, windSpeed: 5 },\n        { humidity: 67, pressure: 1027, temperature: -0.5, windSpeed: 5.5 },\n      ],\n    },\n  ],\n};\n// Renderizamos el gráfico con los datos de prueba\nrenderChart(testWeatherData);\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {\n  fetchAndDisplayWeatherForCity,\n  fetchAndDisplayWeatherForLocation,\n} from './weathercard.js';\nimport { loadAndRenderChart } from './grafic.js'; // Importă funcția loadAndRenderChart\n\nlet favoritesList;\n\nfunction capitalizeCityName(city) {\n  return city.charAt(0).toUpperCase() + city.slice(1).toLowerCase();\n}\n\n// Funcție pentru a afișa modalul personalizat\nfunction showCustomAlert(city, isAdded) {\n  let language = 'ro'; // Implicit pe română\n\n  const messages = {\n    ro: {\n      added: `${capitalizeCityName(city)} a fost adăugat la favorite.`,\n      exists: `${capitalizeCityName(city)} este deja în lista de favorite.`,\n    },\n    en: {\n      added: `${capitalizeCityName(city)} has been added to favorites.`,\n      exists: `${capitalizeCityName(city)} is already in the favorites list.`,\n    },\n  };\n\n  // Funcție pentru actualizarea mesajului în funcție de limbă\n  function updateMessage() {\n    const message = isAdded\n      ? messages[language].added\n      : messages[language].exists;\n    modalMessage.textContent = message;\n  }\n\n  const modal = document.getElementById('custom-alert');\n  const modalMessage = document.getElementById('modal-message');\n  const closeModal = document.getElementById('close-modal');\n  const btnRo = document.getElementById('btn-ro');\n  const btnEn = document.getElementById('btn-en');\n\n  // Setează mesajul inițial (în română)\n  updateMessage();\n\n  // Afișează modalul\n  modal.style.display = 'block';\n\n  // Închide modalul când se apasă pe X\n  closeModal.onclick = function () {\n    modal.style.display = 'none';\n  };\n\n  // Închide modalul dacă se face click în afara acestuia\n  window.onclick = function (event) {\n    if (event.target === modal) {\n      modal.style.display = 'none';\n    }\n  };\n\n  // Eveniment pentru butonul RO (activează româna)\n  btnRo.onclick = function () {\n    language = 'ro'; // Schimbă limba la română\n    btnRo.classList.add('active');\n    btnEn.classList.remove('active');\n    updateMessage(); // Actualizează mesajul\n  };\n\n  // Eveniment pentru butonul EN (activează engleza)\n  btnEn.onclick = function () {\n    language = 'en'; // Schimbă limba la engleză\n    btnEn.classList.add('active');\n    btnRo.classList.remove('active');\n    updateMessage(); // Actualizează mesajul\n  };\n}\n\nfunction capitalizeCityName(city) {\n  return city.charAt(0).toUpperCase() + city.slice(1).toLowerCase();\n}\n\nfunction addToFavorites(city) {\n  city = capitalizeCityName(city); // Capitalizează numele orașului\n  let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  if (!favorites.includes(city)) {\n    favorites.push(city);\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n    displayFavorites();\n    showCustomAlert(city, true); // Mesaj pentru adăugare la favorite\n  } else {\n    showCustomAlert(city, false); // Mesaj pentru deja în favorite\n  }\n}\n\nfunction displayFavorites() {\n  favoritesList = document.getElementById('favorites-list');\n  const showMoreBtn = document.getElementById('show-more-btn');\n  const showLessBtn = document.getElementById('show-less-btn');\n  if (favoritesList) {\n    favoritesList.innerHTML = '';\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    favorites.forEach(city => {\n      const li = document.createElement('li');\n      li.classList.add('favorite-item');\n      li.textContent = city;\n      li.addEventListener('click', () => {\n        fetchAndDisplayWeatherForCity(city);\n      });\n\n      const removeBtn = document.createElement('span');\n      removeBtn.classList.add('remove-favorite');\n      removeBtn.addEventListener('click', event => {\n        event.stopPropagation();\n        removeFromFavorites(city);\n      });\n\n      li.appendChild(removeBtn);\n      favoritesList.appendChild(li);\n    });\n\n    const items = favoritesList.querySelectorAll('li');\n    items.forEach((item, index) => {\n      item.style.display = index < 4 ? 'inline-block' : 'none';\n    });\n    showMoreBtn.style.display = favorites.length > 4 ? 'block' : 'none';\n    showLessBtn.style.display = 'none';\n  }\n}\n\nfunction removeFromFavorites(city) {\n  let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  favorites = favorites.filter(favorite => favorite !== city);\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n  displayFavorites();\n}\n\nexport function initializeSearch() {\n  const cityInput = document.getElementById('city-input');\n  const starIcon = document.getElementById('star-icon');\n  const locationIcon = document.getElementById('location-icon');\n  const showMoreBtn = document.getElementById('show-more-btn');\n  const showLessBtn = document.getElementById('show-less-btn');\n  const searchForm = document.getElementById('search-form');\n\n  if (searchForm) {\n    searchForm.style.width = '0';\n    searchForm.style.overflow = 'hidden';\n    setTimeout(() => {\n      searchForm.style.transition = 'width 1s ease-in-out';\n      searchForm.style.width = '100%';\n    }, 100);\n  }\n\n  if (cityInput) {\n    cityInput.addEventListener('keydown', function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        const city = cityInput.value.trim();\n        if (city) {\n          fetchAndDisplayWeatherForCity(city);\n        }\n      }\n    });\n  } else {\n    console.warn('City input element not found.');\n  }\n\n  if (starIcon) {\n    starIcon.addEventListener('click', () => {\n      const city = cityInput.value.trim();\n      if (city) {\n        addToFavorites(city);\n      }\n    });\n  }\n\n  if (locationIcon) {\n    locationIcon.addEventListener('click', async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          async position => {\n            const { latitude, longitude } = position.coords;\n            const cityName = await fetchAndDisplayWeatherForLocation(\n              latitude,\n              longitude\n            );\n            if (cityName) {\n              loadAndRenderChart(cityName);\n            }\n          },\n          async error => {\n            console.error('Error getting location:', error);\n            const cityName = await fetchAndDisplayWeatherForCity('București');\n            if (cityName) {\n              loadAndRenderChart(cityName);\n            }\n          }\n        );\n      } else {\n        console.error('Geolocation is not supported by this browser');\n        const cityName = await fetchAndDisplayWeatherForCity('București');\n        if (cityName) {\n          loadAndRenderChart(cityName);\n        }\n      }\n    });\n  }\n\n  if (showMoreBtn) {\n    showMoreBtn.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M4 2L8 6L4 10\" stroke=\"white\" stroke-width=\"2\"/>\n      </svg>\n    `;\n\n    showMoreBtn.addEventListener('click', () => {\n      const favoriteItems = favoritesList.querySelectorAll('li');\n      favoriteItems.forEach(item => {\n        item.style.display = 'inline-block';\n      });\n      showMoreBtn.style.display = 'none';\n      showLessBtn.style.display = 'block';\n    });\n  }\n\n  if (showLessBtn) {\n    showLessBtn.innerHTML = `\n      <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M8 2L4 6L8 10\" stroke=\"white\" stroke-width=\"2\"/>\n      </svg>\n    `;\n\n    showLessBtn.addEventListener('click', () => {\n      const favoriteItems = favoritesList.querySelectorAll('li');\n      favoriteItems.forEach((item, index) => {\n        item.style.display = index < 4 ? 'inline-block' : 'none';\n      });\n      showMoreBtn.style.display = 'block';\n      showLessBtn.style.display = 'none';\n    });\n  }\n\n  displayFavorites(); // Display favorites when the page loads\n}\n","import { initializeSearch } from './partials/searchBar';\nimport {\n  initializeWeatherCard,\n  fetchAndDisplayWeatherForCity,\n} from './partials/weathercard.js';\nimport { loadAndRenderChart } from './partials/grafic.js';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  initializeSearch();\n  await initializeWeatherCard();\n});\n"],"names":["$f8e092a558195575$export$2077e0241d6afd3c","v","$f8e092a558195575$export$837ba5c449269406","l","h","Math","max","min","$f8e092a558195575$export$bcc6e673dfa14d36","$f8e092a558195575$export$ed9bd8dcaeba14f6","$f8e092a558195575$export$dbf961a8d278dbef","$f8e092a558195575$export$aa35ef1f24408ab9","$f8e092a558195575$var$map$1","A","B","C","D","E","F","a","b","c","d","e","f","$f8e092a558195575$var$hex","$f8e092a558195575$var$h1","$f8e092a558195575$var$h2","$f8e092a558195575$var$eq","$f8e092a558195575$export$1b06654353ef9f67","r","g","$f8e092a558195575$var$isShort","$f8e092a558195575$var$alpha","undefined","$f8e092a558195575$var$HUE_RE","$f8e092a558195575$var$hsl2rgbn","s","n","k","$f8e092a558195575$var$hsv2rgbn","$f8e092a558195575$var$hwb2rgbn","w","rgb","i","$f8e092a558195575$export$b5ba70b240f8f7f","$f8e092a558195575$var$hueValue","$f8e092a558195575$var$calln","Array","isArray","map","$f8e092a558195575$export$4c15bd42559b811d","$f8e092a558195575$var$hue","$f8e092a558195575$export$5e91288c399be4f9","str","m","exec","p1","p2","$f8e092a558195575$export$e2710022c70fc9ee","$f8e092a558195575$export$b785a357c84e4a04","$f8e092a558195575$var$map","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$f8e092a558195575$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$f8e092a558195575$var$names","$f8e092a558195575$export$b2f06b640faad956","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","$f8e092a558195575$var$unpack","transparent","toLowerCase","$f8e092a558195575$var$RGB_RE","$f8e092a558195575$var$to","pow","$f8e092a558195575$var$from","$f8e092a558195575$var$modHSL","ratio","tmp","$f8e092a558195575$var$clone","proto","assign","$f8e092a558195575$var$fromObject","input","$f8e092a558195575$var$functionParse","charAt","$f8e092a558195575$export$91aedb20f296e541","$f8e092a558195575$export$892596cec99bc70e","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hexString","hslString","$f8e092a558195575$export$a197af1c58e6260c","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","$f8e092a558195575$var$interpolate","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$f8e092a558195575$export$bb628a54ab399bc9","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$f3ddd0be20e1c820$export$91477dc880baac21","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","$f3ddd0be20e1c820$export$4368d992c4eafac0","_scriptable","startsWith","_indexable","_fallback","defaults","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$8ad0206f64f59332$export$a424a0aa8f687495","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","$8ad0206f64f59332$export$f32766ea09ec8bc4","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$8ad0206f64f59332$export$a13296960cae0384","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","$8ad0206f64f59332$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","$8ad0206f64f59332$export$4bb7493d241fd8a5","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","$8ad0206f64f59332$export$c537fa0d021d010b","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","$8ad0206f64f59332$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$8ad0206f64f59332$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","$8ad0206f64f59332$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","$8ad0206f64f59332$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$8ad0206f64f59332$export$d5c56664638992a4","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$8ad0206f64f59332$export$28c660c63b792dea","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","$8ad0206f64f59332$export$acaa6426d77a227e","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","$d3e533760148db3f$var$ctx","querySelector","$d3e533760148db3f$var$chartShowBtn","$d3e533760148db3f$var$chartCloseBtn","$d3e533760148db3f$var$chartContainer","$d3e533760148db3f$var$chartShowButtonContainer","$d3e533760148db3f$var$chartDisplay","classList","toggle","$d3e533760148db3f$var$average","avg","toFixed","$d3e533760148db3f$var$getChartData","weather","chartData","days","daysData","humidity","forecasts","pressure","temperature","speed","windSpeed","smallScreen","innerWidth","$d3e533760148db3f$var$weatherChart","$d3e533760148db3f$var$renderChart","async","$d3e533760148db3f$export$4d94300e4b512447","city","$ccdfeceaf1384a39$exports","getWeatherDataForChart","$44ced582dd439d5f$var$favoritesList","$44ced582dd439d5f$var$capitalizeCityName","$44ced582dd439d5f$var$showCustomAlert","isAdded","language","messages","ro","exists","en","updateMessage","message","modalMessage","textContent","modal","closeModal","btnRo","btnEn","onclick","$44ced582dd439d5f$var$displayFavorites","showMoreBtn","showLessBtn","innerHTML","favorites","localStorage","getItem","li","createElement","fetchAndDisplayWeatherForCity","removeBtn","stopPropagation","favorite","setItem","$44ced582dd439d5f$var$removeFromFavorites","appendChild","querySelectorAll","$44ced582dd439d5f$export$27d2ef8106210bfe","cityInput","starIcon","locationIcon","searchForm","overflow","preventDefault","trim","$44ced582dd439d5f$var$addToFavorites","navigator","geolocation","getCurrentPosition","latitude","longitude","coords","cityName","fetchAndDisplayWeatherForLocation","initializeWeatherCard"],"version":3,"file":"index.1acd4814.js.map"}